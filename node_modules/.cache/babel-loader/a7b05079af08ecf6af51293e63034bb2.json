{"ast":null,"code":"\"use strict\";\n\nvar __spreadArrays = this && this.__spreadArrays || function () {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) r[k] = a[j];\n\n  return r;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar react_1 = __importDefault(require(\"react\"));\n\nfunction getLastChildren(reactElement) {\n  var isReactElement = react_1.default.isValidElement(reactElement);\n  return isReactElement ? getLastChildren(reactElement.props.children) : reactElement;\n}\n\nexports.getLastChildren = getLastChildren;\n\nfunction isPropFilterable(tableHeaders, prop) {\n  var headersLength = tableHeaders.length;\n  var i = 0;\n  var found = false;\n  var isFilterable = false;\n\n  while (!found && i < headersLength) {\n    if (tableHeaders[i].prop === prop) {\n      found = true;\n\n      if (tableHeaders[i].filterable === true) {\n        isFilterable = true;\n      }\n    }\n\n    i += 1;\n  }\n\n  return isFilterable;\n}\n\nexports.isPropFilterable = isPropFilterable;\n\nfunction sortData(data, sortedProp, onSort) {\n  var sortedData = __spreadArrays(data);\n\n  if (sortedProp.prop !== undefined) {\n    var prop_1 = sortedProp.prop,\n        isAscending = sortedProp.isAscending;\n    var sortMultiplier_1 = isAscending ? 1 : -1;\n    sortedData = sortedData.sort(function (a, b) {\n      var quantifiedValue1 = getLastChildren(a[prop_1]);\n      var quantifiedValue2 = getLastChildren(b[prop_1]); // if onSort use the onSort[prop] function\n      // this is a handler for custom objects, such as Date\n\n      if (onSort && typeof onSort[prop_1] === 'function') {\n        quantifiedValue1 = onSort[prop_1](quantifiedValue1);\n        quantifiedValue2 = onSort[prop_1](quantifiedValue2);\n      }\n\n      if (quantifiedValue1 < quantifiedValue2) {\n        return -1 * sortMultiplier_1;\n      } else if (quantifiedValue1 > quantifiedValue2) {\n        return 1 * sortMultiplier_1;\n      }\n\n      return 0;\n    });\n  }\n\n  return sortedData;\n}\n\nexports.sortData = sortData;\n\nfunction filterData(data, tableHeaders, filterText, onFilter) {\n  var filteredData = __spreadArrays(data);\n\n  if (filterText !== '') {\n    filteredData = filteredData.filter(function (element) {\n      var isElementIncluded = false;\n      var i = 0;\n      var elementProps = Object.keys(element);\n      var elementPropLength = elementProps.length;\n\n      while (!isElementIncluded && i < elementPropLength) {\n        var prop = elementProps[i];\n\n        if (isPropFilterable(tableHeaders, prop)) {\n          var columnValue = element[prop]; // Get last children and fill columnValue with empty string if undefined\n\n          columnValue = getLastChildren(columnValue) || '';\n\n          if (onFilter && typeof onFilter[prop] === 'function') {\n            columnValue = onFilter[prop](columnValue);\n          } else if (typeof columnValue !== 'string') {\n            // Convert to string if it is not a string\n            columnValue = columnValue.toString();\n          }\n\n          columnValue = columnValue.toLowerCase(); // If filterText is string/substring of columnValue\n\n          isElementIncluded = columnValue.includes(filterText.toLowerCase());\n        }\n\n        i += 1;\n      }\n\n      return isElementIncluded;\n    });\n  }\n\n  return filteredData;\n}\n\nexports.filterData = filterData;\n\nfunction paginateData(data, currentPage, rowsPerPage) {\n  var paginatedData = __spreadArrays(data);\n\n  if (rowsPerPage !== undefined) {\n    var startRow = (currentPage - 1) * rowsPerPage;\n    var endRow = currentPage * rowsPerPage;\n    paginatedData = data.slice(startRow, endRow);\n  }\n\n  return paginatedData;\n}\n\nexports.paginateData = paginateData;","map":null,"metadata":{},"sourceType":"script"}