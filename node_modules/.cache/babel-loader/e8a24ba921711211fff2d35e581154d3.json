{"ast":null,"code":"var _jsxFileName = \"/latreact/my-lat3/src/container/upload-component.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport UploadService from \"../services/upload.service\";\n\nconst UploadFIles = props => {\n  const [selectedFiles, setSelectedFiles] = useState(undefined);\n  const [currentFile, setCurrentFile] = useState(undefined);\n  const [progress, setProgress] = useState(0);\n  const [message, setMessage] = useState(\"\");\n  const [fileInfos, setFileInfos] = useState([]);\n\n  const selectFile = event => {\n    setSelectedFiles(event.target.files);\n  };\n\n  useEffect(() => {\n    UploadService.getFiles().then(response => {\n      setFileInfos(response.data);\n    });\n  }, []);\n\n  const upload = () => {\n    let currentFile = selectedFiles[0];\n    setProgress(0);\n    setCurrentFile(currentFile);\n    UploadService.upload(currentFile, event => {\n      setProgress(Math.round(100 * event.loaded / event.total));\n    }).then(response => {\n      setMessage(response.data.message);\n      return UploadService.getFiles();\n    }).then(files => {\n      setFileInfos(files.data);\n    }).catch(() => {\n      setProgress(0);\n      setMessage(\"Couldt not upload the file\");\n      setCurrentFile(undefined);\n    });\n    setSelectedFiles(undefined);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, currentFile && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-bar progress-bar-info progress-bar-striped\",\n    role: \"progressbar\",\n    \"aria-valuenow\": progress,\n    \"aria-valuemin\": \"0\",\n    \"aria-valuemax\": \"100\",\n    style: {\n      width: progress + \"%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, progress, \"%\")), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"btn btn-default\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    onChange: selectFile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-success\",\n    disabled: !selectedFiles,\n    onClick: upload,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, \"Upload\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"alert alert-light\",\n    role: \"alert\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, message), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  }, \"List of Files\"), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"list-group list-group-flush\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }, fileInfos && fileInfos.map((file, index) => /*#__PURE__*/React.createElement(\"li\", {\n    className: \"list-group-item\",\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: file.url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 25\n    }\n  }, file.name))))), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 21\n    }\n  }, props.countFromGlobal));\n}; // function mapStateToProps(state) {\n//     return {\n//         countFromGlobal : state.counter.countGlobal\n//     }\n// }\n// export default connect(mapStateToProps)(UploadFIles)\n\n\nexport default UploadFIles;","map":{"version":3,"sources":["/latreact/my-lat3/src/container/upload-component.jsx"],"names":["React","useState","useEffect","connect","UploadService","UploadFIles","props","selectedFiles","setSelectedFiles","undefined","currentFile","setCurrentFile","progress","setProgress","message","setMessage","fileInfos","setFileInfos","selectFile","event","target","files","getFiles","then","response","data","upload","Math","round","loaded","total","catch","width","map","file","index","url","name","countFromGlobal"],"mappings":"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","sourcesContent":["import React , {useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport UploadService from \"../services/upload.service\";\n\nconst UploadFIles = (props) => {\n\n    const [selectedFiles, setSelectedFiles] = useState(undefined);\n    const [currentFile, setCurrentFile] = useState(undefined);\n    const [progress, setProgress] = useState(0);\n    const [message, setMessage] = useState(\"\");\n    const [fileInfos, setFileInfos] = useState([]);\n\n    const selectFile = (event) => {\n        setSelectedFiles(event.target.files);\n    };\n\n\n    useEffect(() => {\n        UploadService.getFiles().then((response) => {\n            setFileInfos(response.data)\n        });\n    }, []);\n\n    const upload = () => {\n        let currentFile = selectedFiles[0];\n\n        setProgress(0);\n        setCurrentFile(currentFile);\n\n        UploadService.upload(currentFile, (event) => {\n            setProgress(Math.round((100 * event.loaded) / event.total))\n        }).then( (response) => {\n            setMessage(response.data.message);\n            return UploadService.getFiles();\n        }).then( (files) => {\n            setFileInfos(files.data);\n        } )\n        .catch(() => {\n            setProgress(0);\n            setMessage(\"Couldt not upload the file\");\n            setCurrentFile(undefined);\n        });\n\n        setSelectedFiles(undefined);\n    };\n\n\n    return (\n                <div>\n            {currentFile && (\n                <div className=\"progress\">\n                <div\n                    className=\"progress-bar progress-bar-info progress-bar-striped\"\n                    role=\"progressbar\"\n                    aria-valuenow={progress}\n                    aria-valuemin=\"0\"\n                    aria-valuemax=\"100\"\n                    style={{ width: progress + \"%\" }}\n                >\n                    {progress}%\n                </div>\n                </div>\n            )}\n\n            <label className=\"btn btn-default\">\n                <input type=\"file\" onChange={selectFile} />\n            </label>\n\n            <button\n                className=\"btn btn-success\"\n                disabled={!selectedFiles}\n                onClick={upload}\n            >\n                Upload\n            </button>\n\n            <div className=\"alert alert-light\" role=\"alert\">\n                {message}\n            </div>\n\n            <div className=\"card\">\n                <div className=\"card-header\">List of Files</div>\n                <ul className=\"list-group list-group-flush\">\n                {fileInfos &&\n                    fileInfos.map((file, index) => (\n                    <li className=\"list-group-item\" key={index}>\n                        <a href={file.url}>{file.name}</a>\n                    </li>\n                    ))}\n                </ul>\n            </div>\n\n            <hr />\n                    <h4>{props.countFromGlobal}</h4>\n            </div>\n    );\n};\n// function mapStateToProps(state) {\n//     return {\n//         countFromGlobal : state.counter.countGlobal\n//     }\n// }\n\n// export default connect(mapStateToProps)(UploadFIles)\nexport default UploadFIles;\n"]},"metadata":{},"sourceType":"module"}