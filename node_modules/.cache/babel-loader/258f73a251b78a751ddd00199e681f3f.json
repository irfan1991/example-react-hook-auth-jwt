{"ast":null,"code":"var _jsxFileName = \"/latreact/my-lat3/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nconst globalState = {\n  countGlobal: 0\n}; //reducer\n\nconst rootReducer = (state = globalState, action) => {\n  if (action.type == \"ADD_COUNT\") {\n    return { ...state,\n      countGlobal: state.countGlobal + 1\n    };\n  }\n\n  return state;\n}; //store\n\n\nconst store = createStore(rootReducer);\nReactDOM.render( /*#__PURE__*/React.createElement(Provider, {\n  store: store,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(BrowserRouter, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }\n}))), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/latreact/my-lat3/src/index.js"],"names":["React","ReactDOM","BrowserRouter","createStore","Provider","App","serviceWorker","globalState","countGlobal","rootReducer","state","action","type","store","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,SAASC,WAAT,QAA4B,OAA5B;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AAEA,MAAMC,WAAW,GAAG;AAClBC,EAAAA,WAAW,EAAG;AADI,CAApB,C,CAIA;;AACA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGH,WAAT,EAAqBI,MAArB,KAAgC;AAC9C,MAAIA,MAAM,CAACC,IAAP,IAAe,WAAnB,EAAgC;AAC9B,WAAO,EACL,GAAGF,KADE;AAELF,MAAAA,WAAW,EAAGE,KAAK,CAACF,WAAN,GAAmB;AAF5B,KAAP;AAID;;AACD,SAAOE,KAAP;AACL,CARD,C,CAUA;;;AACA,MAAMG,KAAK,GAAGV,WAAW,CAACM,WAAD,CAAzB;AAEAR,QAAQ,CAACa,MAAT,eACE,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAED,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACA,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADA,CADF,EAMEE,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CANF,E,CASA;AACA;AACA;;AACAV,aAAa,CAACW,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst globalState = {\n  countGlobal : 0\n};\n\n//reducer\nconst rootReducer = (state = globalState,action) => {\n      if (action.type == \"ADD_COUNT\") {\n        return {\n          ...state,\n          countGlobal : state.countGlobal+ 1\n        }\n      }\n      return state\n};\n\n//store\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <Provider store={store}>\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}