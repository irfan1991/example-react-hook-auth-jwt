{"ast":null,"code":"var _jsxFileName = \"/latreact/my-lat3/src/container/upload-component.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport UploadService from \"../services/upload.service\";\nimport { RootContext } from \"../App\";\n\nconst UploadFIles = props => {\n  const [selectedFiles, setSelectedFiles] = useState(undefined);\n  const [currentFile, setCurrentFile] = useState(undefined);\n  const [progress, setProgress] = useState(0);\n  const [message, setMessage] = useState(\"\");\n  const [fileInfos, setFileInfos] = useState([]);\n\n  const selectFile = event => {\n    setSelectedFiles(event.target.files);\n  };\n\n  useEffect(() => {\n    UploadService.getFiles().then(response => {\n      setFileInfos(response.data);\n    });\n  }, []);\n\n  const upload = () => {\n    let currentFile = selectedFiles[0];\n    setProgress(0);\n    setCurrentFile(currentFile);\n    UploadService.upload(currentFile, event => {\n      setProgress(Math.round(100 * event.loaded / event.total));\n    }).then(response => {\n      setMessage(response.data.message);\n      return UploadService.getFiles();\n    }).then(files => {\n      setFileInfos(files.data);\n    }).catch(() => {\n      setProgress(0);\n      setMessage(\"Couldt not upload the file\");\n      setCurrentFile(undefined);\n    });\n    setSelectedFiles(undefined);\n  };\n\n  return /*#__PURE__*/React.createElement(RootContext.Consumer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, value => {\n    console.log(value);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 25\n      }\n    }, currentFile && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"progress\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"progress-bar progress-bar-info progress-bar-striped\",\n      role: \"progressbar\",\n      \"aria-valuenow\": progress,\n      \"aria-valuemin\": \"0\",\n      \"aria-valuemax\": \"100\",\n      style: {\n        width: progress + \"%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }\n    }, progress, \"%\")), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"btn btn-default\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      onChange: selectFile,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-success\",\n      disabled: !selectedFiles,\n      onClick: upload,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }, \"Upload\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"alert alert-light\",\n      role: \"alert\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    }, message), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }\n    }, \"List of Files\"), /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"list-group list-group-flush\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }\n    }, fileInfos && fileInfos.map((file, index) => /*#__PURE__*/React.createElement(\"li\", {\n      className: \"list-group-item\",\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: file.url,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 25\n      }\n    }, file.name))))), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }\n    }));\n  });\n}; // function mapStateToProps(state) {\n//     return {\n//         countFromGlobal : state.counter.countGlobal\n//     }\n// }\n// export default connect(mapStateToProps)(UploadFIles)\n\n\nexport default UploadFIles;","map":{"version":3,"sources":["/latreact/my-lat3/src/container/upload-component.jsx"],"names":["React","useState","useEffect","connect","UploadService","RootContext","UploadFIles","props","selectedFiles","setSelectedFiles","undefined","currentFile","setCurrentFile","progress","setProgress","message","setMessage","fileInfos","setFileInfos","selectFile","event","target","files","getFiles","then","response","data","upload","Math","round","loaded","total","catch","value","console","log","width","map","file","index","url","name"],"mappings":"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","sourcesContent":["import React , {useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport UploadService from \"../services/upload.service\";\nimport {RootContext} from \"../App\";\n\nconst UploadFIles = (props) => {\n\n    const [selectedFiles, setSelectedFiles] = useState(undefined);\n    const [currentFile, setCurrentFile] = useState(undefined);\n    const [progress, setProgress] = useState(0);\n    const [message, setMessage] = useState(\"\");\n    const [fileInfos, setFileInfos] = useState([]);\n\n    const selectFile = (event) => {\n        setSelectedFiles(event.target.files);\n    };\n\n\n    useEffect(() => {\n        UploadService.getFiles().then((response) => {\n            setFileInfos(response.data)\n        });\n    }, []);\n\n    const upload = () => {\n        let currentFile = selectedFiles[0];\n\n        setProgress(0);\n        setCurrentFile(currentFile);\n\n        UploadService.upload(currentFile, (event) => {\n            setProgress(Math.round((100 * event.loaded) / event.total))\n        }).then( (response) => {\n            setMessage(response.data.message);\n            return UploadService.getFiles();\n        }).then( (files) => {\n            setFileInfos(files.data);\n        } )\n        .catch(() => {\n            setProgress(0);\n            setMessage(\"Couldt not upload the file\");\n            setCurrentFile(undefined);\n        });\n\n        setSelectedFiles(undefined);\n    };\n\n\n    return (\n\n        <RootContext.Consumer>\n            {\n                value => {\n\n                    console.log(value);\n                    return (\n                        <div>\n            {currentFile && (\n                <div className=\"progress\">\n                <div\n                    className=\"progress-bar progress-bar-info progress-bar-striped\"\n                    role=\"progressbar\"\n                    aria-valuenow={progress}\n                    aria-valuemin=\"0\"\n                    aria-valuemax=\"100\"\n                    style={{ width: progress + \"%\" }}\n                >\n                    {progress}%\n                </div>\n                </div>\n            )}\n\n            <label className=\"btn btn-default\">\n                <input type=\"file\" onChange={selectFile} />\n            </label>\n\n            <button\n                className=\"btn btn-success\"\n                disabled={!selectedFiles}\n                onClick={upload}\n            >\n                Upload\n            </button>\n\n            <div className=\"alert alert-light\" role=\"alert\">\n                {message}\n            </div>\n\n            <div className=\"card\">\n                <div className=\"card-header\">List of Files</div>\n                <ul className=\"list-group list-group-flush\">\n                {fileInfos &&\n                    fileInfos.map((file, index) => (\n                    <li className=\"list-group-item\" key={index}>\n                        <a href={file.url}>{file.name}</a>\n                    </li>\n                    ))}\n                </ul>\n            </div>\n\n            <hr />\n                    <h4>{}</h4>\n            </div>\n                    )\n                }\n            }\n        </RootContext.Consumer>\n                \n    );\n};\n// function mapStateToProps(state) {\n//     return {\n//         countFromGlobal : state.counter.countGlobal\n//     }\n// }\n\n// export default connect(mapStateToProps)(UploadFIles)\nexport default UploadFIles;\n"]},"metadata":{},"sourceType":"module"}